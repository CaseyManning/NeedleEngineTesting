{
  "version": 3,
  "sources": ["../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/peerjs-js-binarypack/lib/bufferbuilder.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/peerjs-js-binarypack/lib/binarypack.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/webrtc-adapter/src/js/utils.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/webrtc-adapter/src/js/chrome/getusermedia.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/webrtc-adapter/src/js/edge/filtericeservers.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/sdp/sdp.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/rtcpeerconnection-shim/rtcpeerconnection.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/webrtc-adapter/src/js/edge/getusermedia.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/webrtc-adapter/src/js/edge/getdisplaymedia.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/webrtc-adapter/src/js/edge/edge_shim.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/webrtc-adapter/src/js/firefox/getusermedia.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/webrtc-adapter/src/js/safari/safari_shim.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/webrtc-adapter/src/js/common_shim.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/webrtc-adapter/src/js/adapter_factory.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/webrtc-adapter/src/js/adapter_core.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/dist/adapter.ts", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/dist/supports.ts", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/dist/util.ts", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/node_modules/eventemitter3/index.js", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/dist/logger.ts", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/dist/enums.ts", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/dist/socket.ts", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/dist/negotiator.ts", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/dist/baseconnection.ts", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/dist/mediaconnection.ts", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/dist/encodingQueue.ts", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/dist/dataconnection.ts", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/dist/api.ts", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/dist/peer.ts", "../../../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/dist/exports.ts", "dep:peerjs"],
  "sourcesContent": ["var binaryFeatures = {};\r\nbinaryFeatures.useBlobBuilder = (function () {\r\n  try {\r\n    new Blob([]);\r\n    return false;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nbinaryFeatures.useArrayBufferView = !binaryFeatures.useBlobBuilder && (function () {\r\n  try {\r\n    return (new Blob([new Uint8Array([])])).size === 0;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nmodule.exports.binaryFeatures = binaryFeatures;\r\nvar BlobBuilder = module.exports.BlobBuilder;\r\nif (typeof window !== 'undefined') {\r\n  BlobBuilder = module.exports.BlobBuilder = window.WebKitBlobBuilder ||\r\n    window.MozBlobBuilder || window.MSBlobBuilder || window.BlobBuilder;\r\n}\r\n\r\nfunction BufferBuilder () {\r\n  this._pieces = [];\r\n  this._parts = [];\r\n}\r\n\r\nBufferBuilder.prototype.append = function (data) {\r\n  if (typeof data === 'number') {\r\n    this._pieces.push(data);\r\n  } else {\r\n    this.flush();\r\n    this._parts.push(data);\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.flush = function () {\r\n  if (this._pieces.length > 0) {\r\n    var buf = new Uint8Array(this._pieces);\r\n    if (!binaryFeatures.useArrayBufferView) {\r\n      buf = buf.buffer;\r\n    }\r\n    this._parts.push(buf);\r\n    this._pieces = [];\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.getBuffer = function () {\r\n  this.flush();\r\n  if (binaryFeatures.useBlobBuilder) {\r\n    var builder = new BlobBuilder();\r\n    for (var i = 0, ii = this._parts.length; i < ii; i++) {\r\n      builder.append(this._parts[i]);\r\n    }\r\n    return builder.getBlob();\r\n  } else {\r\n    return new Blob(this._parts);\r\n  }\r\n};\r\n\r\nmodule.exports.BufferBuilder = BufferBuilder;\r\n", "var BufferBuilder = require('./bufferbuilder').BufferBuilder;\r\nvar binaryFeatures = require('./bufferbuilder').binaryFeatures;\r\n\r\nvar BinaryPack = {\r\n  unpack: function (data) {\r\n    var unpacker = new Unpacker(data);\r\n    return unpacker.unpack();\r\n  },\r\n  pack: function (data) {\r\n    var packer = new Packer();\r\n    packer.pack(data);\r\n    var buffer = packer.getBuffer();\r\n    return buffer;\r\n  }\r\n};\r\n\r\nmodule.exports = BinaryPack;\r\n\r\nfunction Unpacker (data) {\r\n  // Data is ArrayBuffer\r\n  this.index = 0;\r\n  this.dataBuffer = data;\r\n  this.dataView = new Uint8Array(this.dataBuffer);\r\n  this.length = this.dataBuffer.byteLength;\r\n}\r\n\r\nUnpacker.prototype.unpack = function () {\r\n  var type = this.unpack_uint8();\r\n  if (type < 0x80) {\r\n    return type;\r\n  } else if ((type ^ 0xe0) < 0x20) {\r\n    return (type ^ 0xe0) - 0x20;\r\n  }\r\n\r\n  var size;\r\n  if ((size = type ^ 0xa0) <= 0x0f) {\r\n    return this.unpack_raw(size);\r\n  } else if ((size = type ^ 0xb0) <= 0x0f) {\r\n    return this.unpack_string(size);\r\n  } else if ((size = type ^ 0x90) <= 0x0f) {\r\n    return this.unpack_array(size);\r\n  } else if ((size = type ^ 0x80) <= 0x0f) {\r\n    return this.unpack_map(size);\r\n  }\r\n\r\n  switch (type) {\r\n    case 0xc0:\r\n      return null;\r\n    case 0xc1:\r\n      return undefined;\r\n    case 0xc2:\r\n      return false;\r\n    case 0xc3:\r\n      return true;\r\n    case 0xca:\r\n      return this.unpack_float();\r\n    case 0xcb:\r\n      return this.unpack_double();\r\n    case 0xcc:\r\n      return this.unpack_uint8();\r\n    case 0xcd:\r\n      return this.unpack_uint16();\r\n    case 0xce:\r\n      return this.unpack_uint32();\r\n    case 0xcf:\r\n      return this.unpack_uint64();\r\n    case 0xd0:\r\n      return this.unpack_int8();\r\n    case 0xd1:\r\n      return this.unpack_int16();\r\n    case 0xd2:\r\n      return this.unpack_int32();\r\n    case 0xd3:\r\n      return this.unpack_int64();\r\n    case 0xd4:\r\n      return undefined;\r\n    case 0xd5:\r\n      return undefined;\r\n    case 0xd6:\r\n      return undefined;\r\n    case 0xd7:\r\n      return undefined;\r\n    case 0xd8:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_string(size);\r\n    case 0xd9:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_string(size);\r\n    case 0xda:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_raw(size);\r\n    case 0xdb:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_raw(size);\r\n    case 0xdc:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_array(size);\r\n    case 0xdd:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_array(size);\r\n    case 0xde:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_map(size);\r\n    case 0xdf:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_map(size);\r\n  }\r\n};\r\n\r\nUnpacker.prototype.unpack_uint8 = function () {\r\n  var byte = this.dataView[this.index] & 0xff;\r\n  this.index++;\r\n  return byte;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint16 = function () {\r\n  var bytes = this.read(2);\r\n  var uint16 =\r\n    ((bytes[0] & 0xff) * 256) + (bytes[1] & 0xff);\r\n  this.index += 2;\r\n  return uint16;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint32 = function () {\r\n  var bytes = this.read(4);\r\n  var uint32 =\r\n    ((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n    bytes[3];\r\n  this.index += 4;\r\n  return uint32;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint64 = function () {\r\n  var bytes = this.read(8);\r\n  var uint64 =\r\n    ((((((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n      bytes[3]) * 256 +\r\n      bytes[4]) * 256 +\r\n      bytes[5]) * 256 +\r\n      bytes[6]) * 256 +\r\n    bytes[7];\r\n  this.index += 8;\r\n  return uint64;\r\n};\r\n\r\nUnpacker.prototype.unpack_int8 = function () {\r\n  var uint8 = this.unpack_uint8();\r\n  return (uint8 < 0x80) ? uint8 : uint8 - (1 << 8);\r\n};\r\n\r\nUnpacker.prototype.unpack_int16 = function () {\r\n  var uint16 = this.unpack_uint16();\r\n  return (uint16 < 0x8000) ? uint16 : uint16 - (1 << 16);\r\n};\r\n\r\nUnpacker.prototype.unpack_int32 = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  return (uint32 < Math.pow(2, 31)) ? uint32\r\n    : uint32 - Math.pow(2, 32);\r\n};\r\n\r\nUnpacker.prototype.unpack_int64 = function () {\r\n  var uint64 = this.unpack_uint64();\r\n  return (uint64 < Math.pow(2, 63)) ? uint64\r\n    : uint64 - Math.pow(2, 64);\r\n};\r\n\r\nUnpacker.prototype.unpack_raw = function (size) {\r\n  if (this.length < this.index + size) {\r\n    throw new Error('BinaryPackFailure: index is out of range' +\r\n      ' ' + this.index + ' ' + size + ' ' + this.length);\r\n  }\r\n  var buf = this.dataBuffer.slice(this.index, this.index + size);\r\n  this.index += size;\r\n\r\n  // buf = util.bufferToString(buf);\r\n\r\n  return buf;\r\n};\r\n\r\nUnpacker.prototype.unpack_string = function (size) {\r\n  var bytes = this.read(size);\r\n  var i = 0;\r\n  var str = '';\r\n  var c;\r\n  var code;\r\n\r\n  while (i < size) {\r\n    c = bytes[i];\r\n    if (c < 128) {\r\n      str += String.fromCharCode(c);\r\n      i++;\r\n    } else if ((c ^ 0xc0) < 32) {\r\n      code = ((c ^ 0xc0) << 6) | (bytes[i + 1] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 2;\r\n    } else {\r\n      code = ((c & 15) << 12) | ((bytes[i + 1] & 63) << 6) |\r\n        (bytes[i + 2] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 3;\r\n    }\r\n  }\r\n\r\n  this.index += size;\r\n  return str;\r\n};\r\n\r\nUnpacker.prototype.unpack_array = function (size) {\r\n  var objects = new Array(size);\r\n  for (var i = 0; i < size; i++) {\r\n    objects[i] = this.unpack();\r\n  }\r\n  return objects;\r\n};\r\n\r\nUnpacker.prototype.unpack_map = function (size) {\r\n  var map = {};\r\n  for (var i = 0; i < size; i++) {\r\n    var key = this.unpack();\r\n    var value = this.unpack();\r\n    map[key] = value;\r\n  }\r\n  return map;\r\n};\r\n\r\nUnpacker.prototype.unpack_float = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  var sign = uint32 >> 31;\r\n  var exp = ((uint32 >> 23) & 0xff) - 127;\r\n  var fraction = (uint32 & 0x7fffff) | 0x800000;\r\n  return (sign === 0 ? 1 : -1) *\r\n    fraction * Math.pow(2, exp - 23);\r\n};\r\n\r\nUnpacker.prototype.unpack_double = function () {\r\n  var h32 = this.unpack_uint32();\r\n  var l32 = this.unpack_uint32();\r\n  var sign = h32 >> 31;\r\n  var exp = ((h32 >> 20) & 0x7ff) - 1023;\r\n  var hfrac = (h32 & 0xfffff) | 0x100000;\r\n  var frac = hfrac * Math.pow(2, exp - 20) +\r\n    l32 * Math.pow(2, exp - 52);\r\n  return (sign === 0 ? 1 : -1) * frac;\r\n};\r\n\r\nUnpacker.prototype.read = function (length) {\r\n  var j = this.index;\r\n  if (j + length <= this.length) {\r\n    return this.dataView.subarray(j, j + length);\r\n  } else {\r\n    throw new Error('BinaryPackFailure: read index out of range');\r\n  }\r\n};\r\n\r\nfunction Packer () {\r\n  this.bufferBuilder = new BufferBuilder();\r\n}\r\n\r\nPacker.prototype.getBuffer = function () {\r\n  return this.bufferBuilder.getBuffer();\r\n};\r\n\r\nPacker.prototype.pack = function (value) {\r\n  var type = typeof (value);\r\n  if (type === 'string') {\r\n    this.pack_string(value);\r\n  } else if (type === 'number') {\r\n    if (Math.floor(value) === value) {\r\n      this.pack_integer(value);\r\n    } else {\r\n      this.pack_double(value);\r\n    }\r\n  } else if (type === 'boolean') {\r\n    if (value === true) {\r\n      this.bufferBuilder.append(0xc3);\r\n    } else if (value === false) {\r\n      this.bufferBuilder.append(0xc2);\r\n    }\r\n  } else if (type === 'undefined') {\r\n    this.bufferBuilder.append(0xc0);\r\n  } else if (type === 'object') {\r\n    if (value === null) {\r\n      this.bufferBuilder.append(0xc0);\r\n    } else {\r\n      var constructor = value.constructor;\r\n      if (constructor == Array) {\r\n        this.pack_array(value);\r\n      } else if (constructor == Blob || constructor == File || value instanceof Blob || value instanceof File) {\r\n        this.pack_bin(value);\r\n      } else if (constructor == ArrayBuffer) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value));\r\n        } else {\r\n          this.pack_bin(value);\r\n        }\r\n      } else if ('BYTES_PER_ELEMENT' in value) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value.buffer));\r\n        } else {\r\n          this.pack_bin(value.buffer);\r\n        }\r\n      } else if ((constructor == Object) || (constructor.toString().startsWith('class'))) {\r\n        this.pack_object(value);\r\n      } else if (constructor == Date) {\r\n        this.pack_string(value.toString());\r\n      } else if (typeof value.toBinaryPack === 'function') {\r\n        this.bufferBuilder.append(value.toBinaryPack());\r\n      } else {\r\n        throw new Error('Type \"' + constructor.toString() + '\" not yet supported');\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Type \"' + type + '\" not yet supported');\r\n  }\r\n  this.bufferBuilder.flush();\r\n};\r\n\r\nPacker.prototype.pack_bin = function (blob) {\r\n  var length = blob.length || blob.byteLength || blob.size;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xa0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xda);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdb);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(blob);\r\n};\r\n\r\nPacker.prototype.pack_string = function (str) {\r\n  var length = utf8Length(str);\r\n\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xb0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xd8);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xd9);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(str);\r\n};\r\n\r\nPacker.prototype.pack_array = function (ary) {\r\n  var length = ary.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x90 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xdc);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdd);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var i = 0; i < length; i++) {\r\n    this.pack(ary[i]);\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_integer = function (num) {\r\n  if (num >= -0x20 && num <= 0x7f) {\r\n    this.bufferBuilder.append(num & 0xff);\r\n  } else if (num >= 0x00 && num <= 0xff) {\r\n    this.bufferBuilder.append(0xcc);\r\n    this.pack_uint8(num);\r\n  } else if (num >= -0x80 && num <= 0x7f) {\r\n    this.bufferBuilder.append(0xd0);\r\n    this.pack_int8(num);\r\n  } else if (num >= 0x0000 && num <= 0xffff) {\r\n    this.bufferBuilder.append(0xcd);\r\n    this.pack_uint16(num);\r\n  } else if (num >= -0x8000 && num <= 0x7fff) {\r\n    this.bufferBuilder.append(0xd1);\r\n    this.pack_int16(num);\r\n  } else if (num >= 0x00000000 && num <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xce);\r\n    this.pack_uint32(num);\r\n  } else if (num >= -0x80000000 && num <= 0x7fffffff) {\r\n    this.bufferBuilder.append(0xd2);\r\n    this.pack_int32(num);\r\n  } else if (num >= -0x8000000000000000 && num <= 0x7FFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xd3);\r\n    this.pack_int64(num);\r\n  } else if (num >= 0x0000000000000000 && num <= 0xFFFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xcf);\r\n    this.pack_uint64(num);\r\n  } else {\r\n    throw new Error('Invalid integer');\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_double = function (num) {\r\n  var sign = 0;\r\n  if (num < 0) {\r\n    sign = 1;\r\n    num = -num;\r\n  }\r\n  var exp = Math.floor(Math.log(num) / Math.LN2);\r\n  var frac0 = num / Math.pow(2, exp) - 1;\r\n  var frac1 = Math.floor(frac0 * Math.pow(2, 52));\r\n  var b32 = Math.pow(2, 32);\r\n  var h32 = (sign << 31) | ((exp + 1023) << 20) |\r\n    (frac1 / b32) & 0x0fffff;\r\n  var l32 = frac1 % b32;\r\n  this.bufferBuilder.append(0xcb);\r\n  this.pack_int32(h32);\r\n  this.pack_int32(l32);\r\n};\r\n\r\nPacker.prototype.pack_object = function (obj) {\r\n  var keys = Object.keys(obj);\r\n  var length = keys.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x80 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xde);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdf);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      this.pack(prop);\r\n      this.pack(obj[prop]);\r\n    }\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_uint8 = function (num) {\r\n  this.bufferBuilder.append(num);\r\n};\r\n\r\nPacker.prototype.pack_uint16 = function (num) {\r\n  this.bufferBuilder.append(num >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_uint32 = function (num) {\r\n  var n = num & 0xffffffff;\r\n  this.bufferBuilder.append((n & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((n & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((n & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((n & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_uint64 = function (num) {\r\n  var high = num / Math.pow(2, 32);\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int8 = function (num) {\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int16 = function (num) {\r\n  this.bufferBuilder.append((num & 0xff00) >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int32 = function (num) {\r\n  this.bufferBuilder.append((num >>> 24) & 0xff);\r\n  this.bufferBuilder.append((num & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((num & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((num & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int64 = function (num) {\r\n  var high = Math.floor(num / Math.pow(2, 32));\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nfunction _utf8Replace (m) {\r\n  var code = m.charCodeAt(0);\r\n\r\n  if (code <= 0x7ff) return '00';\r\n  if (code <= 0xffff) return '000';\r\n  if (code <= 0x1fffff) return '0000';\r\n  if (code <= 0x3ffffff) return '00000';\r\n  return '000000';\r\n}\r\n\r\nfunction utf8Length (str) {\r\n  if (str.length > 600) {\r\n    // Blob method faster for large strings\r\n    return (new Blob([str])).size;\r\n  } else {\r\n    return str.replace(/[^\\u0000-\\u007F]/g, _utf8Replace).length;\r\n  }\r\n}\r\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n      'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  const {navigator} = window;\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n        /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection &&\n       !window.RTCIceGatherer)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n        /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (navigator.mediaDevices &&\n      navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n    result.browser = 'edge';\n    result.version = extractVersion(navigator.userAgent,\n        /Edge\\/(\\d+).(\\d+)$/, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n        /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(devices => {\n            devices = devices.filter(d => d.kind === 'videoinput');\n            let dev = devices.find(d => matches.some(match =>\n              d.label.toLowerCase().includes(match)));\n            if (!dev && devices.length && matches.includes('back')) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n", "/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      return getSourceId(constraints)\n        .then(sourceId => {\n          const widthSpecified = constraints.video && constraints.video.width;\n          const heightSpecified = constraints.video &&\n            constraints.video.height;\n          const frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        selector]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n      .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n          this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n          externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n          internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n      .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n      window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n      'localDescription', {\n        get() {\n          const description = origLocalDescription.get.apply(this);\n          if (description.type === '') {\n            return description;\n          }\n          return replaceInternalStreamId(this, description);\n        }\n      });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n            'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n", "/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nexport function filterIceServers(iceServers, edgeVersion) {\n  let hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(server => {\n    if (server && (server.urls || server.url)) {\n      let urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n      const isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(url => {\n        // filter STUN unconditionally.\n        if (url.indexOf('stun:') === 0) {\n          return false;\n        }\n\n        const validTurn = url.startsWith('turn') &&\n            !url.startsWith('turn:[') &&\n            url.includes('transport=udp');\n        if (validTurn && !hasTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return validTurn && !hasTurn;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n", "/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  var parts = keyParams.substr(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES paramters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  var pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substr(12),\n    password: pwd.substr(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(parts) {\n      return parts.attribute === 'cname';\n    });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(function(line) {\n      var parts = line.substr(17).split(' ');\n      return parts.map(function(part) {\n        return parseInt(part, 10);\n      });\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(obj) {\n      return obj.attribute === 'cname';\n    })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attr\u0456bute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(msidParts) {\n      return msidParts.attribute === 'msid';\n    });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  var mline = SDPUtils.parseMLine(mediaSection);\n  var maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  var maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substr(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  var sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substr(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize: maxMessageSize\n    };\n  }\n  var sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    var parts = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:')[0]\n      .substr(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize: maxMessageSize\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  var output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n'\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n'\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n    transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n    transceiver.dtlsTransport.getLocalParameters(),\n    type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n", "/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all field\u0455 are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // \u0455dpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete\u2025\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\n          !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  const shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(e => Promise.reject(shimError_(e)));\n  };\n}\n", "/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window) {\n  if (!('getDisplayMedia' in window.navigator)) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    window.navigator.getDisplayMedia.bind(window.navigator);\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport {filterIceServers} from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function RTCIceCandidate(args) {\n        return args;\n      };\n    }\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function RTCSessionDescription(args) {\n        return args;\n      };\n    }\n    // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n    if (browserDetails.version < 15025) {\n      const origMSTEnabled = Object.getOwnPropertyDescriptor(\n          window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set(value) {\n          origMSTEnabled.set.call(this, value);\n          const ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n  }\n\n  // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n  // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n\n  const RTCPeerConnectionShim = shimRTCPeerConnection(window,\n      browserDetails.version);\n  window.RTCPeerConnection = function RTCPeerConnection(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers,\n        browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n    return new RTCPeerConnectionShim(config);\n  };\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\n\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender &&\n      !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack =\n        window.RTCRtpSender.prototype.setTrack;\n  }\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n", "/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n        Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        const initParameters = arguments[1];\n        const shouldPerformCheck = initParameters &&\n                                  'sendEncodings' in initParameters;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          initParameters.sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params) ||\n              // Avoid being fooled by patched getParameters() below.\n              (params.encodings.length === 1 &&\n               Object.keys(params.encodings[0]).length === 0)) {\n            params.encodings = initParameters.sendEncodings;\n            sender.sendEncodings = initParameters.sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) {\n          params.encodings = [].concat(this.sendEncodings || [{}]);\n        }\n        return params;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateOffer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateAnswer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track, ...streams) {\n        if (streams) {\n          streams.forEach((stream) => {\n            if (!this._localStreams) {\n              this._localStreams = [stream];\n            } else if (!this._localStreams.includes(stream)) {\n              this._localStreams.push(stream);\n            }\n          });\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n      .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (!server.hasOwnProperty('urls') &&\n              server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio');\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video');\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n\nexport function shimAudioContext(window) {\n  if (typeof window !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n", "/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      const augmentedCandidate = Object.assign(nativeCandidate,\n          parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function toJSON() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment,\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n            this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n            this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      const sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription &&\n          desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp,\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\nexport function shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      // Native support for ignoring exists for Chrome M77+.\n      // Safari ignores as well, exact version unknown but works in the same\n      // version that also ignores addIceCandidate(null).\n      if (((browserDetails.browser === 'chrome' && browserDetails.version < 78)\n           || (browserDetails.browser === 'firefox'\n               && browserDetails.version < 68)\n           || (browserDetails.browser === 'safari'))\n          && arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n  // Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as edgeShim from './edge/edge_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimEdge: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n\n      edgeShim.shimGetUserMedia(window, browserDetails);\n      edgeShim.shimGetDisplayMedia(window, browserDetails);\n      edgeShim.shimPeerConnection(window, browserDetails);\n      edgeShim.shimReplaceTrack(window, browserDetails);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter =\n  adapterFactory({window: typeof window === 'undefined' ? undefined : window});\nexport default adapter;\n", "import webRTCAdapter from \"webrtc-adapter\";\n\nexport { webRTCAdapter };\n", "import { webRTCAdapter } from './adapter';\n\nexport const Supports = new class {\n  readonly isIOS = ['iPad', 'iPhone', 'iPod'].includes(navigator.platform);\n  readonly supportedBrowsers = ['firefox', 'chrome', 'safari'];\n\n  readonly minFirefoxVersion = 59;\n  readonly minChromeVersion = 72;\n  readonly minSafariVersion = 605;\n\n  isWebRTCSupported(): boolean {\n    return typeof RTCPeerConnection !== 'undefined';\n  }\n\n  isBrowserSupported(): boolean {\n    const browser = this.getBrowser();\n    const version = this.getVersion();\n\n    const validBrowser = this.supportedBrowsers.includes(browser);\n\n    if (!validBrowser) return false;\n\n    if (browser === 'chrome') return version >= this.minChromeVersion;\n    if (browser === 'firefox') return version >= this.minFirefoxVersion;\n    if (browser === 'safari') return !this.isIOS && version >= this.minSafariVersion;\n\n    return false;\n  }\n\n  getBrowser(): string {\n    return webRTCAdapter.browserDetails.browser;\n  }\n\n  getVersion(): number {\n    return webRTCAdapter.browserDetails.version || 0;\n  }\n\n  isUnifiedPlanSupported(): boolean {\n    const browser = this.getBrowser();\n    const version = webRTCAdapter.browserDetails.version || 0;\n\n    if (browser === 'chrome' && version < 72) return false;\n    if (browser === 'firefox' && version >= 59) return true;\n    if (!window.RTCRtpTransceiver || !('currentDirection' in RTCRtpTransceiver.prototype)) return false;\n\n    let tempPc: RTCPeerConnection;\n    let supported = false;\n\n    try {\n      tempPc = new RTCPeerConnection();\n      tempPc.addTransceiver('audio');\n      supported = true;\n    } catch (e) { }\n    finally {\n      if (tempPc) {\n        tempPc.close();\n      }\n    }\n\n    return supported;\n  }\n\n  toString(): string {\n    return `Supports: \n    browser:${this.getBrowser()} \n    version:${this.getVersion()} \n    isIOS:${this.isIOS} \n    isWebRTCSupported:${this.isWebRTCSupported()} \n    isBrowserSupported:${this.isBrowserSupported()} \n    isUnifiedPlanSupported:${this.isUnifiedPlanSupported()}`;\n  }\n}", "import * as BinaryPack from \"peerjs-js-binarypack\";\nimport { Supports } from './supports';\nimport { UtilSupportsObj } from '..';\n\nconst DEFAULT_CONFIG = {\n  iceServers: [\n    { urls: \"stun:stun.l.google.com:19302\" },\n    { urls: \"turn:0.peerjs.com:3478\", username: \"peerjs\", credential: \"peerjsp\" }\n  ],\n  sdpSemantics: \"unified-plan\"\n};\n\nexport const util = new class {\n  noop(): void { }\n\n  readonly CLOUD_HOST = \"0.peerjs.com\";\n  readonly CLOUD_PORT = 443;\n\n  // Browsers that need chunking:\n  readonly chunkedBrowsers = { Chrome: 1, chrome: 1 };\n  readonly chunkedMTU = 16300; // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\n\n  // Returns browser-agnostic default config\n  readonly defaultConfig = DEFAULT_CONFIG;\n\n  readonly browser = Supports.getBrowser();\n  readonly browserVersion = Supports.getVersion();\n\n  // Lists which features are supported\n  readonly supports = (function () {\n    const supported: UtilSupportsObj = {\n      browser: Supports.isBrowserSupported(),\n      webRTC: Supports.isWebRTCSupported(),\n      audioVideo: false,\n      data: false,\n      binaryBlob: false,\n      reliable: false,\n    };\n\n    if (!supported.webRTC) return supported;\n\n    let pc: RTCPeerConnection;\n\n    try {\n      pc = new RTCPeerConnection(DEFAULT_CONFIG);\n\n      supported.audioVideo = true;\n\n      let dc: RTCDataChannel;\n\n      try {\n        dc = pc.createDataChannel(\"_PEERJSTEST\", { ordered: true });\n        supported.data = true;\n        supported.reliable = !!dc.ordered;\n\n        // Binary test\n        try {\n          dc.binaryType = \"blob\";\n          supported.binaryBlob = !Supports.isIOS;\n        } catch (e) {\n        }\n      } catch (e) {\n      } finally {\n        if (dc) {\n          dc.close();\n        }\n      }\n    } catch (e) {\n    } finally {\n      if (pc) {\n        pc.close();\n      }\n    }\n\n    return supported;\n  })();\n\n  // Ensure alphanumeric ids\n  validateId(id: string): boolean {\n    // Allow empty ids\n    return !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(id);\n  }\n\n  pack = BinaryPack.pack;\n  unpack = BinaryPack.unpack;\n\n  // Binary stuff\n\n  private _dataCount: number = 1;\n\n  chunk(blob: Blob): { __peerData: number, n: number, total: number, data: Blob }[] {\n    const chunks = [];\n    const size = blob.size;\n    const total = Math.ceil(size / util.chunkedMTU);\n\n    let index = 0;\n    let start = 0;\n\n    while (start < size) {\n      const end = Math.min(size, start + util.chunkedMTU);\n      const b = blob.slice(start, end);\n\n      const chunk = {\n        __peerData: this._dataCount,\n        n: index,\n        data: b,\n        total,\n      };\n\n      chunks.push(chunk);\n\n      start = end;\n      index++;\n    }\n\n    this._dataCount++;\n\n    return chunks;\n  }\n\n  blobToArrayBuffer(blob: Blob, cb: (arg: ArrayBuffer | null) => void): FileReader {\n    const fr = new FileReader();\n\n    fr.onload = function (evt) {\n      if (evt.target) {\n        cb(evt.target.result as ArrayBuffer);\n      }\n    };\n\n    fr.readAsArrayBuffer(blob);\n\n    return fr;\n  }\n\n  binaryStringToArrayBuffer(binary: string): ArrayBuffer | SharedArrayBuffer {\n    const byteArray = new Uint8Array(binary.length);\n\n    for (let i = 0; i < binary.length; i++) {\n      byteArray[i] = binary.charCodeAt(i) & 0xff;\n    }\n\n    return byteArray.buffer;\n  }\n\n  randomToken(): string {\n    return Math.random()\n      .toString(36)\n      .substr(2);\n  }\n\n  isSecure(): boolean {\n    return location.protocol === \"https:\";\n  }\n}\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "const LOG_PREFIX = 'PeerJS: ';\n\n/*\nPrints log messages depending on the debug level passed in. Defaults to 0.\n0  Prints no logs.\n1  Prints only errors.\n2  Prints errors and warnings.\n3  Prints all logs.\n*/\nexport enum LogLevel {\n    Disabled,\n    Errors,\n    Warnings,\n    All\n}\n\nclass Logger {\n    private _logLevel = LogLevel.Disabled;\n\n    get logLevel(): LogLevel { return this._logLevel; }\n\n    set logLevel(logLevel: LogLevel) { this._logLevel = logLevel; }\n\n    log(...args: any[]) {\n        if (this._logLevel >= LogLevel.All) {\n            this._print(LogLevel.All, ...args);\n        }\n    }\n\n    warn(...args: any[]) {\n        if (this._logLevel >= LogLevel.Warnings) {\n            this._print(LogLevel.Warnings, ...args);\n        }\n    }\n\n    error(...args: any[]) {\n        if (this._logLevel >= LogLevel.Errors) {\n            this._print(LogLevel.Errors, ...args);\n        }\n    }\n\n    setLogFunction(fn: (logLevel: LogLevel, ..._: any[]) => void): void {\n        this._print = fn;\n    }\n\n    private _print(logLevel: LogLevel, ...rest: any[]): void {\n        const copy = [LOG_PREFIX, ...rest];\n\n        for (let i in copy) {\n            if (copy[i] instanceof Error) {\n                copy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\n\n            }\n        }\n\n        if (logLevel >= LogLevel.All) {\n            console.log(...copy);\n        } else if (logLevel >= LogLevel.Warnings) {\n            console.warn(\"WARNING\", ...copy);\n        } else if (logLevel >= LogLevel.Errors) {\n            console.error(\"ERROR\", ...copy);\n        }\n    }\n}\n\nexport default new Logger();", "export enum ConnectionEventType {\n  Open = \"open\",\n  Stream = \"stream\",\n  Data = \"data\",\n  Close = \"close\",\n  Error = \"error\",\n  IceStateChanged = \"iceStateChanged\"\n}\n\nexport enum ConnectionType {\n  Data = \"data\",\n  Media = \"media\"\n}\n\nexport enum PeerEventType {\n  Open = \"open\",\n  Close = \"close\",\n  Connection = \"connection\",\n  Call = \"call\",\n  Disconnected = \"disconnected\",\n  Error = \"error\"\n}\n\nexport enum PeerErrorType {\n  BrowserIncompatible = \"browser-incompatible\",\n  Disconnected = \"disconnected\",\n  InvalidID = \"invalid-id\",\n  InvalidKey = \"invalid-key\",\n  Network = \"network\",\n  PeerUnavailable = \"peer-unavailable\",\n  SslUnavailable = \"ssl-unavailable\",\n  ServerError = \"server-error\",\n  SocketError = \"socket-error\",\n  SocketClosed = \"socket-closed\",\n  UnavailableID = \"unavailable-id\",\n  WebRTC = \"webrtc\"\n}\n\nexport enum SerializationType {\n  Binary = \"binary\",\n  BinaryUTF8 = \"binary-utf8\",\n  JSON = \"json\"\n}\n\nexport enum SocketEventType {\n  Message = \"message\",\n  Disconnected = \"disconnected\",\n  Error = \"error\",\n  Close = \"close\"\n}\n\nexport enum ServerMessageType {\n  Heartbeat = \"HEARTBEAT\",\n  Candidate = \"CANDIDATE\",\n  Offer = \"OFFER\",\n  Answer = \"ANSWER\",\n  Open = \"OPEN\", // The connection to the server is open.\n  Error = \"ERROR\", // Server error.\n  IdTaken = \"ID-TAKEN\", // The selected ID is taken.\n  InvalidKey = \"INVALID-KEY\", // The given API key cannot be found.\n  Leave = \"LEAVE\", // Another peer has closed its connection to this peer.\n  Expire = \"EXPIRE\" // The offer sent to a peer has expired without response.\n\n}", "import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\nimport { SocketEventType, ServerMessageType } from \"./enums\";\n\n/**\n * An abstraction on top of WebSockets to provide fastest\n * possible connection for peers.\n */\nexport class Socket extends EventEmitter {\n  private _disconnected: boolean = true;\n  private _id?: string;\n  private _messagesQueue: Array<object> = [];\n  private _socket?: WebSocket;\n  private _wsPingTimer?: any;\n  private readonly _baseUrl: string;\n\n  constructor(\n    secure: any,\n    host: string,\n    port: number,\n    path: string,\n    key: string,\n    private readonly pingInterval: number = 5000,\n  ) {\n    super();\n\n    const wsProtocol = secure ? \"wss://\" : \"ws://\";\n\n    this._baseUrl = wsProtocol + host + \":\" + port + path + \"peerjs?key=\" + key;\n  }\n\n  start(id: string, token: string): void {\n    this._id = id;\n\n    const wsUrl = `${this._baseUrl}&id=${id}&token=${token}`;\n\n    if (!!this._socket || !this._disconnected) {\n      return;\n    }\n\n    this._socket = new WebSocket(wsUrl);\n    this._disconnected = false;\n\n    this._socket.onmessage = (event) => {\n      let data;\n\n      try {\n        data = JSON.parse(event.data);\n        logger.log(\"Server message received:\", data);\n      } catch (e) {\n        logger.log(\"Invalid server message\", event.data);\n        return;\n      }\n\n      this.emit(SocketEventType.Message, data);\n    };\n\n    this._socket.onclose = (event) => {\n      if (this._disconnected) {\n        return;\n      }\n\n      logger.log(\"Socket closed.\", event);\n\n      this._cleanup();\n      this._disconnected = true;\n\n      this.emit(SocketEventType.Disconnected);\n    };\n\n    // Take care of the queue of connections if necessary and make sure Peer knows\n    // socket is open.\n    this._socket.onopen = () => {\n      if (this._disconnected) {\n        return;\n      }\n\n      this._sendQueuedMessages();\n\n      logger.log(\"Socket open\");\n\n      this._scheduleHeartbeat();\n    };\n  }\n\n  private _scheduleHeartbeat(): void {\n    this._wsPingTimer = setTimeout(() => {\n      this._sendHeartbeat();\n    }, this.pingInterval);\n  }\n\n  private _sendHeartbeat(): void {\n    if (!this._wsOpen()) {\n      logger.log(`Cannot send heartbeat, because socket closed`);\n      return;\n    }\n\n    const message = JSON.stringify({ type: ServerMessageType.Heartbeat });\n\n    this._socket!.send(message);\n\n    this._scheduleHeartbeat();\n  }\n\n  /** Is the websocket currently open? */\n  private _wsOpen(): boolean {\n    return !!this._socket && this._socket.readyState === 1;\n  }\n\n  /** Send queued messages. */\n  private _sendQueuedMessages(): void {\n    //Create copy of queue and clear it,\n    //because send method push the message back to queue if smth will go wrong\n    const copiedQueue = [...this._messagesQueue];\n    this._messagesQueue = [];\n\n    for (const message of copiedQueue) {\n      this.send(message);\n    }\n  }\n\n  /** Exposed send for DC & Peer. */\n  send(data: any): void {\n    if (this._disconnected) {\n      return;\n    }\n\n    // If we didn't get an ID yet, we can't yet send anything so we should queue\n    // up these messages.\n    if (!this._id) {\n      this._messagesQueue.push(data);\n      return;\n    }\n\n    if (!data.type) {\n      this.emit(SocketEventType.Error, \"Invalid message\");\n      return;\n    }\n\n    if (!this._wsOpen()) {\n      return;\n    }\n\n    const message = JSON.stringify(data);\n\n    this._socket!.send(message);\n  }\n\n  close(): void {\n    if (this._disconnected) {\n      return;\n    }\n\n    this._cleanup();\n\n    this._disconnected = true;\n  }\n\n  private _cleanup(): void {\n    if (this._socket) {\n      this._socket.onopen = this._socket.onmessage = this._socket.onclose = null;\n      this._socket.close();\n      this._socket = undefined;\n    }\n\n    clearTimeout(this._wsPingTimer!);\n  }\n}\n", "import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport { DataConnection } from \"./dataconnection\";\nimport { ConnectionType, PeerErrorType, ConnectionEventType, ServerMessageType } from \"./enums\";\nimport { BaseConnection } from \"./baseconnection\";\n\n/**\n * Manages all negotiations between Peers.\n */\nexport class Negotiator {\n  constructor(readonly connection: BaseConnection) { }\n\n  /** Returns a PeerConnection object set up correctly (for data, media). */\n  startConnection(options: any) {\n    const peerConnection = this._startPeerConnection();\n\n    // Set the connection's PC.\n    this.connection.peerConnection = peerConnection;\n\n    if (this.connection.type === ConnectionType.Media && options._stream) {\n      this._addTracksToConnection(options._stream, peerConnection);\n    }\n\n    // What do we need to do now?\n    if (options.originator) {\n      if (this.connection.type === ConnectionType.Data) {\n        const dataConnection = <DataConnection>this.connection;\n\n        const config: RTCDataChannelInit = { ordered: !!options.reliable };\n\n        const dataChannel = peerConnection.createDataChannel(\n          dataConnection.label,\n          config\n        );\n        dataConnection.initialize(dataChannel);\n      }\n\n      this._makeOffer();\n    } else {\n      this.handleSDP(\"OFFER\", options.sdp);\n    }\n  }\n\n  /** Start a PC. */\n  private _startPeerConnection(): RTCPeerConnection {\n    logger.log(\"Creating RTCPeerConnection.\");\n\n    const peerConnection = new RTCPeerConnection(this.connection.provider.options.config);\n\n    this._setupListeners(peerConnection);\n\n    return peerConnection;\n  }\n\n  /** Set up various WebRTC listeners. */\n  private _setupListeners(\n    peerConnection: RTCPeerConnection\n  ) {\n    const peerId = this.connection.peer;\n    const connectionId = this.connection.connectionId;\n    const connectionType = this.connection.type;\n    const provider = this.connection.provider;\n\n    // ICE CANDIDATES.\n    logger.log(\"Listening for ICE candidates.\");\n\n    peerConnection.onicecandidate = (evt) => {\n      if (!evt.candidate || !evt.candidate.candidate) return;\n\n      logger.log(`Received ICE candidates for ${peerId}:`, evt.candidate);\n\n      provider.socket.send({\n        type: ServerMessageType.Candidate,\n        payload: {\n          candidate: evt.candidate,\n          type: connectionType,\n          connectionId: connectionId\n        },\n        dst: peerId\n      });\n    };\n\n    peerConnection.oniceconnectionstatechange = () => {\n      switch (peerConnection.iceConnectionState) {\n        case \"failed\":\n          logger.log(\n            \"iceConnectionState is failed, closing connections to \" +\n            peerId\n          );\n          this.connection.emit(\n            ConnectionEventType.Error,\n            new Error(\"Negotiation of connection to \" + peerId + \" failed.\")\n          );\n          this.connection.close();\n          break;\n        case \"closed\":\n          logger.log(\n            \"iceConnectionState is closed, closing connections to \" +\n            peerId\n          );\n          this.connection.emit(\n            ConnectionEventType.Error,\n            new Error(\"Connection to \" + peerId + \" closed.\")\n          );\n          this.connection.close();\n          break;\n        case \"disconnected\":\n          logger.log(\n            \"iceConnectionState changed to disconnected on the connection with \" +\n            peerId\n          );\n          break;\n        case \"completed\":\n          peerConnection.onicecandidate = util.noop;\n          break;\n      }\n\n      this.connection.emit(ConnectionEventType.IceStateChanged, peerConnection.iceConnectionState);\n    };\n\n    // DATACONNECTION.\n    logger.log(\"Listening for data channel\");\n    // Fired between offer and answer, so options should already be saved\n    // in the options hash.\n    peerConnection.ondatachannel = (evt) => {\n      logger.log(\"Received data channel\");\n\n      const dataChannel = evt.channel;\n      const connection = <DataConnection>(\n        provider.getConnection(peerId, connectionId)\n      );\n\n      connection.initialize(dataChannel);\n    };\n\n    // MEDIACONNECTION.\n    logger.log(\"Listening for remote stream\");\n\n    peerConnection.ontrack = (evt) => {\n      logger.log(\"Received remote stream\");\n\n      const stream = evt.streams[0];\n      const connection = provider.getConnection(peerId, connectionId);\n\n      if (connection.type === ConnectionType.Media) {\n        const mediaConnection = <MediaConnection>connection;\n\n        this._addStreamToMediaConnection(stream, mediaConnection);\n      }\n    };\n  }\n\n  cleanup(): void {\n    logger.log(\"Cleaning up PeerConnection to \" + this.connection.peer);\n\n    const peerConnection = this.connection.peerConnection;\n\n    if (!peerConnection) {\n      return;\n    }\n\n    this.connection.peerConnection = null;\n\n    //unsubscribe from all PeerConnection's events\n    peerConnection.onicecandidate = peerConnection.oniceconnectionstatechange = peerConnection.ondatachannel = peerConnection.ontrack = () => { };\n\n    const peerConnectionNotClosed = peerConnection.signalingState !== \"closed\";\n    let dataChannelNotClosed = false;\n\n    if (this.connection.type === ConnectionType.Data) {\n      const dataConnection = <DataConnection>this.connection;\n      const dataChannel = dataConnection.dataChannel;\n\n      if (dataChannel) {\n        dataChannelNotClosed = !!dataChannel.readyState && dataChannel.readyState !== \"closed\";\n      }\n    }\n\n    if (peerConnectionNotClosed || dataChannelNotClosed) {\n      peerConnection.close();\n    }\n  }\n\n  private async _makeOffer(): Promise<void> {\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      const offer = await peerConnection.createOffer(\n        this.connection.options.constraints\n      );\n\n      logger.log(\"Created offer.\");\n\n      if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function') {\n        offer.sdp = this.connection.options.sdpTransform(offer.sdp) || offer.sdp;\n      }\n\n      try {\n        await peerConnection.setLocalDescription(offer);\n\n        logger.log(\"Set localDescription:\", offer, `for:${this.connection.peer}`);\n\n        let payload: any = {\n          sdp: offer,\n          type: this.connection.type,\n          connectionId: this.connection.connectionId,\n          metadata: this.connection.metadata,\n          browser: util.browser\n        };\n\n        if (this.connection.type === ConnectionType.Data) {\n          const dataConnection = <DataConnection>this.connection;\n\n          payload = {\n            ...payload,\n            label: dataConnection.label,\n            reliable: dataConnection.reliable,\n            serialization: dataConnection.serialization\n          };\n        }\n\n        provider.socket.send({\n          type: ServerMessageType.Offer,\n          payload,\n          dst: this.connection.peer\n        });\n      } catch (err) {\n        // TODO: investigate why _makeOffer is being called from the answer\n        if (\n          err !=\n          \"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\"\n        ) {\n          provider.emitError(PeerErrorType.WebRTC, err);\n          logger.log(\"Failed to setLocalDescription, \", err);\n        }\n      }\n    } catch (err_1) {\n      provider.emitError(PeerErrorType.WebRTC, err_1);\n      logger.log(\"Failed to createOffer, \", err_1);\n    }\n  }\n\n  private async _makeAnswer(): Promise<void> {\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      const answer = await peerConnection.createAnswer();\n      logger.log(\"Created answer.\");\n\n      if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function') {\n        answer.sdp = this.connection.options.sdpTransform(answer.sdp) || answer.sdp;\n      }\n\n      try {\n        await peerConnection.setLocalDescription(answer);\n\n        logger.log(`Set localDescription:`, answer, `for:${this.connection.peer}`);\n\n        provider.socket.send({\n          type: ServerMessageType.Answer,\n          payload: {\n            sdp: answer,\n            type: this.connection.type,\n            connectionId: this.connection.connectionId,\n            browser: util.browser\n          },\n          dst: this.connection.peer\n        });\n      } catch (err) {\n        provider.emitError(PeerErrorType.WebRTC, err);\n        logger.log(\"Failed to setLocalDescription, \", err);\n      }\n    } catch (err_1) {\n      provider.emitError(PeerErrorType.WebRTC, err_1);\n      logger.log(\"Failed to create answer, \", err_1);\n    }\n  }\n\n  /** Handle an SDP. */\n  async handleSDP(\n    type: string,\n    sdp: any\n  ): Promise<void> {\n    sdp = new RTCSessionDescription(sdp);\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    logger.log(\"Setting remote description\", sdp);\n\n    const self = this;\n\n    try {\n      await peerConnection.setRemoteDescription(sdp);\n      logger.log(`Set remoteDescription:${type} for:${this.connection.peer}`);\n      if (type === \"OFFER\") {\n        await self._makeAnswer();\n      }\n    } catch (err) {\n      provider.emitError(PeerErrorType.WebRTC, err);\n      logger.log(\"Failed to setRemoteDescription, \", err);\n    }\n  }\n\n  /** Handle a candidate. */\n  async handleCandidate(ice: any): Promise<void> {\n    logger.log(`handleCandidate:`, ice);\n\n    const candidate = ice.candidate;\n    const sdpMLineIndex = ice.sdpMLineIndex;\n    const sdpMid = ice.sdpMid;\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      await peerConnection.addIceCandidate(\n        new RTCIceCandidate({\n          sdpMid: sdpMid,\n          sdpMLineIndex: sdpMLineIndex,\n          candidate: candidate\n        })\n      );\n      logger.log(`Added ICE candidate for:${this.connection.peer}`);\n    } catch (err) {\n      provider.emitError(PeerErrorType.WebRTC, err);\n      logger.log(\"Failed to handleCandidate, \", err);\n    }\n  }\n\n  private _addTracksToConnection(\n    stream: MediaStream,\n    peerConnection: RTCPeerConnection\n  ): void {\n    logger.log(`add tracks from stream ${stream.id} to peer connection`);\n\n    if (!peerConnection.addTrack) {\n      return logger.error(\n        `Your browser does't support RTCPeerConnection#addTrack. Ignored.`\n      );\n    }\n\n    stream.getTracks().forEach(track => {\n      peerConnection.addTrack(track, stream);\n    });\n  }\n\n  private _addStreamToMediaConnection(\n    stream: MediaStream,\n    mediaConnection: MediaConnection\n  ): void {\n    logger.log(\n      `add stream ${stream.id} to media connection ${\n      mediaConnection.connectionId\n      }`\n    );\n\n    mediaConnection.addStream(stream);\n  }\n}\n", "import { EventEmitter } from \"eventemitter3\";\nimport { Peer } from \"./peer\";\nimport { ServerMessage } from \"./servermessage\";\nimport { ConnectionType } from \"./enums\";\n\nexport abstract class BaseConnection extends EventEmitter {\n  protected _open = false;\n\n  readonly metadata: any;\n  connectionId: string;\n\n  peerConnection: RTCPeerConnection;\n\n  abstract get type(): ConnectionType;\n\n  get open() {\n    return this._open;\n  }\n\n  constructor(\n    readonly peer: string,\n    public provider: Peer,\n    readonly options: any\n  ) {\n    super();\n\n    this.metadata = options.metadata;\n  }\n\n  abstract close(): void;\n\n  abstract handleMessage(message: ServerMessage): void;\n}\n", "import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport { ConnectionType, ConnectionEventType, ServerMessageType } from \"./enums\";\nimport { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { AnswerOption } from \"..\";\n\n/**\n * Wraps the streaming interface between two Peers.\n */\nexport class MediaConnection extends BaseConnection {\n  private static readonly ID_PREFIX = \"mc_\";\n\n  private _negotiator: Negotiator;\n  private _localStream: MediaStream;\n  private _remoteStream: MediaStream;\n\n  get type() {\n    return ConnectionType.Media;\n  }\n\n  get localStream(): MediaStream { return this._localStream; }\n  get remoteStream(): MediaStream { return this._remoteStream; }\n\n  constructor(peerId: string, provider: Peer, options: any) {\n    super(peerId, provider, options);\n\n    this._localStream = this.options._stream;\n    this.connectionId =\n      this.options.connectionId ||\n      MediaConnection.ID_PREFIX + util.randomToken();\n\n    this._negotiator = new Negotiator(this);\n\n    if (this._localStream) {\n      this._negotiator.startConnection({\n        _stream: this._localStream,\n        originator: true\n      });\n    }\n  }\n\n  addStream(remoteStream) {\n    logger.log(\"Receiving stream\", remoteStream);\n\n    this._remoteStream = remoteStream;\n    super.emit(ConnectionEventType.Stream, remoteStream); // Should we call this `open`?\n  }\n\n  handleMessage(message: ServerMessage): void {\n    const type = message.type;\n    const payload = message.payload;\n\n    switch (message.type) {\n      case ServerMessageType.Answer:\n        // Forward to negotiator\n        this._negotiator.handleSDP(type, payload.sdp);\n        this._open = true;\n        break;\n      case ServerMessageType.Candidate:\n        this._negotiator.handleCandidate(payload.candidate);\n        break;\n      default:\n        logger.warn(`Unrecognized message type:${type} from peer:${this.peer}`);\n        break;\n    }\n  }\n\n  answer(stream: MediaStream, options: AnswerOption = {}): void {\n    if (this._localStream) {\n      logger.warn(\n        \"Local stream already exists on this MediaConnection. Are you answering a call twice?\"\n      );\n      return;\n    }\n\n    this._localStream = stream;\n\n    if (options && options.sdpTransform) {\n      this.options.sdpTransform = options.sdpTransform;\n    }\n\n    this._negotiator.startConnection({ ...this.options._payload, _stream: stream });\n    // Retrieve lost messages stored because PeerConnection not set up.\n    const messages = this.provider._getMessages(this.connectionId);\n\n    for (let message of messages) {\n      this.handleMessage(message);\n    }\n\n    this._open = true;\n  }\n\n  /**\n   * Exposed functionality for users.\n   */\n\n  /** Allows user to close connection. */\n  close(): void {\n    if (this._negotiator) {\n      this._negotiator.cleanup();\n      this._negotiator = null;\n    }\n\n    this._localStream = null;\n    this._remoteStream = null;\n\n    if (this.provider) {\n      this.provider._removeConnection(this);\n\n      this.provider = null;\n    }\n\n    if (this.options && this.options._stream) {\n      this.options._stream = null;\n    }\n\n    if (!this.open) {\n      return;\n    }\n\n    this._open = false;\n\n    super.emit(ConnectionEventType.Close);\n  }\n}\n", "import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\n\nexport class EncodingQueue extends EventEmitter {\n  readonly fileReader: FileReader = new FileReader();\n\n  private _queue: Blob[] = [];\n  private _processing: boolean = false;\n\n  constructor() {\n    super();\n\n    this.fileReader.onload = (evt) => {\n      this._processing = false;\n\n      if (evt.target) {\n        this.emit('done', evt.target.result as ArrayBuffer);\n      }\n\n      this.doNextTask();\n    };\n\n    this.fileReader.onerror = (evt) => {\n      logger.error(`EncodingQueue error:`, evt);\n      this._processing = false;\n      this.destroy();\n      this.emit('error', evt);\n    }\n  }\n\n  get queue(): Blob[] {\n    return this._queue;\n  }\n\n  get size(): number {\n    return this.queue.length;\n  }\n\n  get processing(): boolean {\n    return this._processing;\n  }\n\n  enque(blob: Blob): void {\n    this.queue.push(blob);\n\n    if (this.processing) return;\n\n    this.doNextTask();\n  }\n\n  destroy(): void {\n    this.fileReader.abort();\n    this._queue = [];\n  }\n\n  private doNextTask(): void {\n    if (this.size === 0) return;\n    if (this.processing) return;\n\n    this._processing = true;\n\n    this.fileReader.readAsArrayBuffer(this.queue.shift());\n  }\n}", "import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport {\n  ConnectionType,\n  ConnectionEventType,\n  SerializationType,\n  ServerMessageType\n} from \"./enums\";\nimport { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { EncodingQueue } from './encodingQueue';\nimport { DataConnection as IDataConnection } from '../index';\n\n/**\n * Wraps a DataChannel between two Peers.\n */\nexport class DataConnection extends BaseConnection implements IDataConnection {\n  private static readonly ID_PREFIX = \"dc_\";\n  private static readonly MAX_BUFFERED_AMOUNT = 8 * 1024 * 1024;\n\n  private _negotiator: Negotiator;\n  readonly label: string;\n  readonly serialization: SerializationType;\n  readonly reliable: boolean;\n  stringify: (data: any) => string = JSON.stringify;\n  parse: (data: string) => any = JSON.parse;\n\n  get type() {\n    return ConnectionType.Data;\n  }\n\n  private _buffer: any[] = [];\n  private _bufferSize = 0;\n  private _buffering = false;\n  private _chunkedData: {\n    [id: number]: {\n      data: Blob[],\n      count: number,\n      total: number\n    }\n  } = {};\n\n  private _dc: RTCDataChannel;\n  private _encodingQueue = new EncodingQueue();\n\n  get dataChannel(): RTCDataChannel {\n    return this._dc;\n  }\n\n  get bufferSize(): number { return this._bufferSize; }\n\n  constructor(peerId: string, provider: Peer, options: any) {\n    super(peerId, provider, options);\n\n    this.connectionId =\n      this.options.connectionId || DataConnection.ID_PREFIX + util.randomToken();\n\n    this.label = this.options.label || this.connectionId;\n    this.serialization = this.options.serialization || SerializationType.Binary;\n    this.reliable = !!this.options.reliable;\n\n    this._encodingQueue.on('done', (ab: ArrayBuffer) => {\n      this._bufferedSend(ab);\n    });\n\n    this._encodingQueue.on('error', () => {\n      logger.error(`DC#${this.connectionId}: Error occured in encoding from blob to arraybuffer, close DC`);\n      this.close();\n    });\n\n    this._negotiator = new Negotiator(this);\n\n    this._negotiator.startConnection(\n      this.options._payload || {\n        originator: true\n      }\n    );\n  }\n\n  /** Called by the Negotiator when the DataChannel is ready. */\n  initialize(dc: RTCDataChannel): void {\n    this._dc = dc;\n    this._configureDataChannel();\n  }\n\n  private _configureDataChannel(): void {\n    if (!util.supports.binaryBlob || util.supports.reliable) {\n      this.dataChannel.binaryType = \"arraybuffer\";\n    }\n\n    this.dataChannel.onopen = () => {\n      logger.log(`DC#${this.connectionId} dc connection success`);\n      this._open = true;\n      this.emit(ConnectionEventType.Open);\n    };\n\n    this.dataChannel.onmessage = (e) => {\n      logger.log(`DC#${this.connectionId} dc onmessage:`, e.data);\n      this._handleDataMessage(e);\n    };\n\n    this.dataChannel.onclose = () => {\n      logger.log(`DC#${this.connectionId} dc closed for:`, this.peer);\n      this.close();\n    };\n  }\n\n  // Handles a DataChannel message.\n  private _handleDataMessage({ data }: { data: Blob | ArrayBuffer | string }): void {\n    const datatype = data.constructor;\n\n    const isBinarySerialization = this.serialization === SerializationType.Binary ||\n      this.serialization === SerializationType.BinaryUTF8;\n\n    let deserializedData: any = data;\n\n    if (isBinarySerialization) {\n      if (datatype === Blob) {\n        // Datatype should never be blob\n        util.blobToArrayBuffer(data as Blob, (ab) => {\n          const unpackedData = util.unpack(ab);\n          this.emit(ConnectionEventType.Data, unpackedData);\n        });\n        return;\n      } else if (datatype === ArrayBuffer) {\n        deserializedData = util.unpack(data as ArrayBuffer);\n      } else if (datatype === String) {\n        // String fallback for binary data for browsers that don't support binary yet\n        const ab = util.binaryStringToArrayBuffer(data as string);\n        deserializedData = util.unpack(ab);\n      }\n    } else if (this.serialization === SerializationType.JSON) {\n      deserializedData = this.parse(data as string);\n    }\n\n    // Check if we've chunked--if so, piece things back together.\n    // We're guaranteed that this isn't 0.\n    if (deserializedData.__peerData) {\n      this._handleChunk(deserializedData);\n      return;\n    }\n\n    super.emit(ConnectionEventType.Data, deserializedData);\n  }\n\n  private _handleChunk(data: { __peerData: number, n: number, total: number, data: Blob }): void {\n    const id = data.__peerData;\n    const chunkInfo = this._chunkedData[id] || {\n      data: [],\n      count: 0,\n      total: data.total\n    };\n\n    chunkInfo.data[data.n] = data.data;\n    chunkInfo.count++;\n    this._chunkedData[id] = chunkInfo;\n\n    if (chunkInfo.total === chunkInfo.count) {\n      // Clean up before making the recursive call to `_handleDataMessage`.\n      delete this._chunkedData[id];\n\n      // We've received all the chunks--time to construct the complete data.\n      const data = new Blob(chunkInfo.data);\n      this._handleDataMessage({ data });\n    }\n  }\n\n  /**\n   * Exposed functionality for users.\n   */\n\n  /** Allows user to close connection. */\n  close(): void {\n    this._buffer = [];\n    this._bufferSize = 0;\n    this._chunkedData = {};\n\n    if (this._negotiator) {\n      this._negotiator.cleanup();\n      this._negotiator = null;\n    }\n\n    if (this.provider) {\n      this.provider._removeConnection(this);\n\n      this.provider = null;\n    }\n\n    if (this.dataChannel) {\n      this.dataChannel.onopen = null;\n      this.dataChannel.onmessage = null;\n      this.dataChannel.onclose = null;\n      this._dc = null;\n    }\n\n    if (this._encodingQueue) {\n      this._encodingQueue.destroy();\n      this._encodingQueue.removeAllListeners();\n      this._encodingQueue = null;\n    }\n\n    if (!this.open) {\n      return;\n    }\n\n    this._open = false;\n\n    super.emit(ConnectionEventType.Close);\n  }\n\n  /** Allows user to send data. */\n  send(data: any, chunked?: boolean): void {\n    if (!this.open) {\n      super.emit(\n        ConnectionEventType.Error,\n        new Error(\n          \"Connection is not open. You should listen for the `open` event before sending messages.\"\n        )\n      );\n      return;\n    }\n\n    if (this.serialization === SerializationType.JSON) {\n      this._bufferedSend(this.stringify(data));\n    } else if (\n      this.serialization === SerializationType.Binary ||\n      this.serialization === SerializationType.BinaryUTF8\n    ) {\n      const blob = util.pack(data);\n\n      if (!chunked && blob.size > util.chunkedMTU) {\n        this._sendChunks(blob);\n        return;\n      }\n\n      if (!util.supports.binaryBlob) {\n        // We only do this if we really need to (e.g. blobs are not supported),\n        // because this conversion is costly.\n        this._encodingQueue.enque(blob);\n      } else {\n        this._bufferedSend(blob);\n      }\n    } else {\n      this._bufferedSend(data);\n    }\n  }\n\n  private _bufferedSend(msg: any): void {\n    if (this._buffering || !this._trySend(msg)) {\n      this._buffer.push(msg);\n      this._bufferSize = this._buffer.length;\n    }\n  }\n\n  // Returns true if the send succeeds.\n  private _trySend(msg: any): boolean {\n    if (!this.open) {\n      return false;\n    }\n\n    if (this.dataChannel.bufferedAmount > DataConnection.MAX_BUFFERED_AMOUNT) {\n      this._buffering = true;\n      setTimeout(() => {\n        this._buffering = false;\n        this._tryBuffer();\n      }, 50);\n\n      return false;\n    }\n\n    try {\n      this.dataChannel.send(msg);\n    } catch (e) {\n      logger.error(`DC#:${this.connectionId} Error when sending:`, e);\n      this._buffering = true;\n\n      this.close();\n\n      return false;\n    }\n\n    return true;\n  }\n\n  // Try to send the first message in the buffer.\n  private _tryBuffer(): void {\n    if (!this.open) {\n      return;\n    }\n\n    if (this._buffer.length === 0) {\n      return;\n    }\n\n    const msg = this._buffer[0];\n\n    if (this._trySend(msg)) {\n      this._buffer.shift();\n      this._bufferSize = this._buffer.length;\n      this._tryBuffer();\n    }\n  }\n\n  private _sendChunks(blob: Blob): void {\n    const blobs = util.chunk(blob);\n    logger.log(`DC#${this.connectionId} Try to send ${blobs.length} chunks...`);\n\n    for (let blob of blobs) {\n      this.send(blob, true);\n    }\n  }\n\n  handleMessage(message: ServerMessage): void {\n    const payload = message.payload;\n\n    switch (message.type) {\n      case ServerMessageType.Answer:\n        this._negotiator.handleSDP(message.type, payload.sdp);\n        break;\n      case ServerMessageType.Candidate:\n        this._negotiator.handleCandidate(payload.candidate);\n        break;\n      default:\n        logger.warn(\n          \"Unrecognized message type:\",\n          message.type,\n          \"from peer:\",\n          this.peer\n        );\n        break;\n    }\n  }\n}\n", "import { util } from \"./util\";\nimport logger from \"./logger\";\n\nexport class API {\n  constructor(private readonly _options: any) { }\n\n  private _buildUrl(method: string): string {\n    const protocol = this._options.secure ? \"https://\" : \"http://\";\n    let url =\n      protocol +\n      this._options.host +\n      \":\" +\n      this._options.port +\n      this._options.path +\n      this._options.key +\n      \"/\" +\n      method;\n    const queryString = \"?ts=\" + new Date().getTime() + \"\" + Math.random();\n    url += queryString;\n\n    return url;\n  }\n\n  /** Get a unique ID from the server via XHR and initialize with it. */\n  async retrieveId(): Promise<string> {\n    const url = this._buildUrl(\"id\");\n\n    try {\n      const response = await fetch(url);\n\n      if (response.status !== 200) {\n        throw new Error(`Error. Status:${response.status}`);\n      }\n\n      return response.text();\n    } catch (error) {\n      logger.error(\"Error retrieving ID\", error);\n\n      let pathError = \"\";\n\n      if (\n        this._options.path === \"/\" &&\n        this._options.host !== util.CLOUD_HOST\n      ) {\n        pathError =\n          \" If you passed in a `path` to your self-hosted PeerServer, \" +\n          \"you'll also need to pass in that same path when creating a new \" +\n          \"Peer.\";\n      }\n\n      throw new Error(\"Could not get an ID from the server.\" + pathError);\n    }\n  }\n\n  /** @deprecated */\n  async listAllPeers(): Promise<any[]> {\n    const url = this._buildUrl(\"peers\");\n\n    try {\n      const response = await fetch(url);\n\n      if (response.status !== 200) {\n        if (response.status === 401) {\n          let helpfulError = \"\";\n\n          if (this._options.host === util.CLOUD_HOST) {\n            helpfulError =\n              \"It looks like you're using the cloud server. You can email \" +\n              \"team@peerjs.com to enable peer listing for your API key.\";\n          } else {\n            helpfulError =\n              \"You need to enable `allow_discovery` on your self-hosted \" +\n              \"PeerServer to use this feature.\";\n          }\n\n          throw new Error(\"It doesn't look like you have permission to list peers IDs. \" +\n            helpfulError);\n        }\n\n        throw new Error(`Error. Status:${response.status}`);\n      }\n\n      return response.json();\n    } catch (error) {\n      logger.error(\"Error retrieving list peers\", error);\n\n      throw new Error(\"Could not get list peers from the server.\" + error);\n    }\n  }\n}\n", "import { EventEmitter } from \"eventemitter3\";\nimport { util } from \"./util\";\nimport logger, { LogLevel } from \"./logger\";\nimport { Socket } from \"./socket\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport { DataConnection } from \"./dataconnection\";\nimport {\n  ConnectionType,\n  PeerErrorType,\n  PeerEventType,\n  SocketEventType,\n  ServerMessageType\n} from \"./enums\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { API } from \"./api\";\nimport { PeerConnectOption, PeerJSOption } from \"..\";\n\nclass PeerOptions implements PeerJSOption {\n  debug?: LogLevel; // 1: Errors, 2: Warnings, 3: All logs\n  host?: string;\n  port?: number;\n  path?: string;\n  key?: string;\n  token?: string;\n  config?: any;\n  secure?: boolean;\n  pingInterval?: number;\n  logFunction?: (logLevel: LogLevel, ...rest: any[]) => void;\n}\n\n/**\n * A peer who can initiate connections with other peers.\n */\nexport class Peer extends EventEmitter {\n  private static readonly DEFAULT_KEY = \"peerjs\";\n\n  private readonly _options: PeerOptions;\n  private readonly _api: API;\n  private readonly _socket: Socket;\n\n  private _id: string | null = null;\n  private _lastServerId: string | null = null;\n\n  // States.\n  private _destroyed = false; // Connections have been killed\n  private _disconnected = false; // Connection to PeerServer killed but P2P connections still active\n  private _open = false; // Sockets and such are not yet open.\n  private readonly _connections: Map<string, BaseConnection[]> = new Map(); // All connections for this peer.\n  private readonly _lostMessages: Map<string, ServerMessage[]> = new Map(); // src => [list of messages]\n\n  get id() {\n    return this._id;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  get open() {\n    return this._open;\n  }\n\n  get socket() {\n    return this._socket;\n  }\n\n  /**\n   * @deprecated \n   * Return type will change from Object to Map<string,[]> \n   */\n  get connections(): Object {\n    const plainConnections = Object.create(null);\n\n    for (let [k, v] of this._connections) {\n      plainConnections[k] = v;\n    }\n\n    return plainConnections;\n  }\n\n  get destroyed() {\n    return this._destroyed;\n  }\n  get disconnected() {\n    return this._disconnected;\n  }\n\n  constructor(id?: string | PeerOptions, options?: PeerOptions) {\n    super();\n\n    let userId: string | undefined;\n\n    // Deal with overloading\n    if (id && id.constructor == Object) {\n      options = id as PeerOptions;\n    } else if (id) {\n      userId = id.toString();\n    }\n\n    // Configurize options\n    options = {\n      debug: 0, // 1: Errors, 2: Warnings, 3: All logs\n      host: util.CLOUD_HOST,\n      port: util.CLOUD_PORT,\n      path: \"/\",\n      key: Peer.DEFAULT_KEY,\n      token: util.randomToken(),\n      config: util.defaultConfig,\n      ...options\n    };\n    this._options = options;\n\n    // Detect relative URL host.\n    if (this._options.host === \"/\") {\n      this._options.host = window.location.hostname;\n    }\n\n    // Set path correctly.\n    if (this._options.path) {\n      if (this._options.path[0] !== \"/\") {\n        this._options.path = \"/\" + this._options.path;\n      }\n      if (this._options.path[this._options.path.length - 1] !== \"/\") {\n        this._options.path += \"/\";\n      }\n    }\n\n    // Set whether we use SSL to same as current host\n    if (this._options.secure === undefined && this._options.host !== util.CLOUD_HOST) {\n      this._options.secure = util.isSecure();\n    } else if (this._options.host == util.CLOUD_HOST) {\n      this._options.secure = true;\n    }\n    // Set a custom log function if present\n    if (this._options.logFunction) {\n      logger.setLogFunction(this._options.logFunction);\n    }\n\n    logger.logLevel = this._options.debug || 0;\n\n    this._api = new API(options);\n    this._socket = this._createServerConnection();\n\n    // Sanity checks\n    // Ensure WebRTC supported\n    if (!util.supports.audioVideo && !util.supports.data) {\n      this._delayedAbort(\n        PeerErrorType.BrowserIncompatible,\n        \"The current browser does not support WebRTC\"\n      );\n      return;\n    }\n\n    // Ensure alphanumeric id\n    if (!!userId && !util.validateId(userId)) {\n      this._delayedAbort(PeerErrorType.InvalidID, `ID \"${userId}\" is invalid`);\n      return;\n    }\n\n    if (userId) {\n      this._initialize(userId);\n    } else {\n      this._api.retrieveId()\n        .then(id => this._initialize(id))\n        .catch(error => this._abort(PeerErrorType.ServerError, error));\n    }\n  }\n\n  private _createServerConnection(): Socket {\n    const socket = new Socket(\n      this._options.secure,\n      this._options.host!,\n      this._options.port!,\n      this._options.path!,\n      this._options.key!,\n      this._options.pingInterval\n    );\n\n    socket.on(SocketEventType.Message, (data: ServerMessage) => {\n      this._handleMessage(data);\n    });\n\n    socket.on(SocketEventType.Error, (error: string) => {\n      this._abort(PeerErrorType.SocketError, error);\n    });\n\n    socket.on(SocketEventType.Disconnected, () => {\n      if (this.disconnected) {\n        return;\n      }\n\n      this.emitError(PeerErrorType.Network, \"Lost connection to server.\");\n      this.disconnect();\n    });\n\n    socket.on(SocketEventType.Close, () => {\n      if (this.disconnected) {\n        return;\n      }\n\n      this._abort(PeerErrorType.SocketClosed, \"Underlying socket is already closed.\");\n    });\n\n    return socket;\n  }\n\n  /** Initialize a connection with the server. */\n  private _initialize(id: string): void {\n    this._id = id;\n    this.socket.start(id, this._options.token!);\n  }\n\n  /** Handles messages from the server. */\n  private _handleMessage(message: ServerMessage): void {\n    const type = message.type;\n    const payload = message.payload;\n    const peerId = message.src;\n\n    switch (type) {\n      case ServerMessageType.Open: // The connection to the server is open.\n        this._lastServerId = this.id;\n        this._open = true;\n        this.emit(PeerEventType.Open, this.id);\n        break;\n      case ServerMessageType.Error: // Server error.\n        this._abort(PeerErrorType.ServerError, payload.msg);\n        break;\n      case ServerMessageType.IdTaken: // The selected ID is taken.\n        this._abort(PeerErrorType.UnavailableID, `ID \"${this.id}\" is taken`);\n        break;\n      case ServerMessageType.InvalidKey: // The given API key cannot be found.\n        this._abort(PeerErrorType.InvalidKey, `API KEY \"${this._options.key}\" is invalid`);\n        break;\n      case ServerMessageType.Leave: // Another peer has closed its connection to this peer.\n        logger.log(`Received leave message from ${peerId}`);\n        this._cleanupPeer(peerId);\n        this._connections.delete(peerId);\n        break;\n      case ServerMessageType.Expire: // The offer sent to a peer has expired without response.\n        this.emitError(PeerErrorType.PeerUnavailable, `Could not connect to peer ${peerId}`);\n        break;\n      case ServerMessageType.Offer: {\n        // we should consider switching this to CALL/CONNECT, but this is the least breaking option.\n        const connectionId = payload.connectionId;\n        let connection = this.getConnection(peerId, connectionId);\n\n        if (connection) {\n          connection.close();\n          logger.warn(`Offer received for existing Connection ID:${connectionId}`);\n        }\n\n        // Create a new connection.\n        if (payload.type === ConnectionType.Media) {\n          connection = new MediaConnection(peerId, this, {\n            connectionId: connectionId,\n            _payload: payload,\n            metadata: payload.metadata\n          });\n          this._addConnection(peerId, connection);\n          this.emit(PeerEventType.Call, connection);\n        } else if (payload.type === ConnectionType.Data) {\n          connection = new DataConnection(peerId, this, {\n            connectionId: connectionId,\n            _payload: payload,\n            metadata: payload.metadata,\n            label: payload.label,\n            serialization: payload.serialization,\n            reliable: payload.reliable\n          });\n          this._addConnection(peerId, connection);\n          this.emit(PeerEventType.Connection, connection);\n        } else {\n          logger.warn(`Received malformed connection type:${payload.type}`);\n          return;\n        }\n\n        // Find messages.\n        const messages = this._getMessages(connectionId);\n        for (let message of messages) {\n          connection.handleMessage(message);\n        }\n\n        break;\n      }\n      default: {\n        if (!payload) {\n          logger.warn(`You received a malformed message from ${peerId} of type ${type}`);\n          return;\n        }\n\n        const connectionId = payload.connectionId;\n        const connection = this.getConnection(peerId, connectionId);\n\n        if (connection && connection.peerConnection) {\n          // Pass it on.\n          connection.handleMessage(message);\n        } else if (connectionId) {\n          // Store for possible later use\n          this._storeMessage(connectionId, message);\n        } else {\n          logger.warn(\"You received an unrecognized message:\", message);\n        }\n        break;\n      }\n    }\n  }\n\n  /** Stores messages without a set up connection, to be claimed later. */\n  private _storeMessage(connectionId: string, message: ServerMessage): void {\n    if (!this._lostMessages.has(connectionId)) {\n      this._lostMessages.set(connectionId, []);\n    }\n\n    this._lostMessages.get(connectionId).push(message);\n  }\n\n  /** Retrieve messages from lost message store */\n  //TODO Change it to private\n  public _getMessages(connectionId: string): ServerMessage[] {\n    const messages = this._lostMessages.get(connectionId);\n\n    if (messages) {\n      this._lostMessages.delete(connectionId);\n      return messages;\n    }\n\n    return [];\n  }\n\n  /**\n   * Returns a DataConnection to the specified peer. See documentation for a\n   * complete list of options.\n   */\n  connect(peer: string, options: PeerConnectOption = {}): DataConnection {\n    if (this.disconnected) {\n      logger.warn(\n        \"You cannot connect to a new Peer because you called \" +\n        \".disconnect() on this Peer and ended your connection with the \" +\n        \"server. You can create a new Peer to reconnect, or call reconnect \" +\n        \"on this peer if you believe its ID to still be available.\"\n      );\n      this.emitError(\n        PeerErrorType.Disconnected,\n        \"Cannot connect to new Peer after disconnecting from server.\"\n      );\n      return;\n    }\n\n    const dataConnection = new DataConnection(peer, this, options);\n    this._addConnection(peer, dataConnection);\n    return dataConnection;\n  }\n\n  /**\n   * Returns a MediaConnection to the specified peer. See documentation for a\n   * complete list of options.\n   */\n  call(peer: string, stream: MediaStream, options: any = {}): MediaConnection {\n    if (this.disconnected) {\n      logger.warn(\n        \"You cannot connect to a new Peer because you called \" +\n        \".disconnect() on this Peer and ended your connection with the \" +\n        \"server. You can create a new Peer to reconnect.\"\n      );\n      this.emitError(\n        PeerErrorType.Disconnected,\n        \"Cannot connect to new Peer after disconnecting from server.\"\n      );\n      return;\n    }\n\n    if (!stream) {\n      logger.error(\n        \"To call a peer, you must provide a stream from your browser's `getUserMedia`.\"\n      );\n      return;\n    }\n\n    options._stream = stream;\n\n    const mediaConnection = new MediaConnection(peer, this, options);\n    this._addConnection(peer, mediaConnection);\n    return mediaConnection;\n  }\n\n  /** Add a data/media connection to this peer. */\n  private _addConnection(peerId: string, connection: BaseConnection): void {\n    logger.log(`add connection ${connection.type}:${connection.connectionId} to peerId:${peerId}`);\n\n    if (!this._connections.has(peerId)) {\n      this._connections.set(peerId, []);\n    }\n    this._connections.get(peerId).push(connection);\n  }\n\n  //TODO should be private\n  _removeConnection(connection: BaseConnection): void {\n    const connections = this._connections.get(connection.peer);\n\n    if (connections) {\n      const index = connections.indexOf(connection);\n\n      if (index !== -1) {\n        connections.splice(index, 1);\n      }\n    }\n\n    //remove from lost messages\n    this._lostMessages.delete(connection.connectionId);\n  }\n\n  /** Retrieve a data/media connection for this peer. */\n  getConnection(peerId: string, connectionId: string): null | BaseConnection {\n    const connections = this._connections.get(peerId);\n    if (!connections) {\n      return null;\n    }\n\n    for (let connection of connections) {\n      if (connection.connectionId === connectionId) {\n        return connection;\n      }\n    }\n\n    return null;\n  }\n\n  private _delayedAbort(type: PeerErrorType, message: string | Error): void {\n    setTimeout(() => {\n      this._abort(type, message);\n    }, 0);\n  }\n\n  /**\n   * Emits an error message and destroys the Peer.\n   * The Peer is not destroyed if it's in a disconnected state, in which case\n   * it retains its disconnected state and its existing connections.\n   */\n  private _abort(type: PeerErrorType, message: string | Error): void {\n    logger.error(\"Aborting!\");\n\n    this.emitError(type, message);\n\n    if (!this._lastServerId) {\n      this.destroy();\n    } else {\n      this.disconnect();\n    }\n  }\n\n  /** Emits a typed error message. */\n  emitError(type: PeerErrorType, err: string | Error): void {\n    logger.error(\"Error:\", err);\n\n    let error: Error & { type?: PeerErrorType };\n\n    if (typeof err === \"string\") {\n      error = new Error(err);\n    } else {\n      error = err as Error;\n    }\n\n    error.type = type;\n\n    this.emit(PeerEventType.Error, error);\n  }\n\n  /**\n   * Destroys the Peer: closes all active connections as well as the connection\n   *  to the server.\n   * Warning: The peer can no longer create or accept connections after being\n   *  destroyed.\n   */\n  destroy(): void {\n    if (this.destroyed) {\n      return;\n    }\n\n    logger.log(`Destroy peer with ID:${this.id}`);\n\n    this.disconnect();\n    this._cleanup();\n\n    this._destroyed = true;\n\n    this.emit(PeerEventType.Close);\n  }\n\n  /** Disconnects every connection on this peer. */\n  private _cleanup(): void {\n    for (let peerId of this._connections.keys()) {\n      this._cleanupPeer(peerId);\n      this._connections.delete(peerId);\n    }\n\n    this.socket.removeAllListeners();\n  }\n\n  /** Closes all connections to this peer. */\n  private _cleanupPeer(peerId: string): void {\n    const connections = this._connections.get(peerId);\n\n    if (!connections) return;\n\n    for (let connection of connections) {\n      connection.close();\n    }\n  }\n\n  /**\n   * Disconnects the Peer's connection to the PeerServer. Does not close any\n   *  active connections.\n   * Warning: The peer can no longer create or accept connections after being\n   *  disconnected. It also cannot reconnect to the server.\n   */\n  disconnect(): void {\n    if (this.disconnected) {\n      return;\n    }\n\n    const currentId = this.id;\n\n    logger.log(`Disconnect peer with ID:${currentId}`);\n\n    this._disconnected = true;\n    this._open = false;\n\n    this.socket.close();\n\n    this._lastServerId = currentId;\n    this._id = null;\n\n    this.emit(PeerEventType.Disconnected, currentId);\n  }\n\n  /** Attempts to reconnect with the same ID. */\n  reconnect(): void {\n    if (this.disconnected && !this.destroyed) {\n      logger.log(`Attempting reconnection to server with ID ${this._lastServerId}`);\n      this._disconnected = false;\n      this._initialize(this._lastServerId!);\n    } else if (this.destroyed) {\n      throw new Error(\"This peer cannot reconnect to the server. It has already been destroyed.\");\n    } else if (!this.disconnected && !this.open) {\n      // Do nothing. We're still connecting the first time.\n      logger.error(\"In a hurry? We're still trying to make the initial connection!\");\n    } else {\n      throw new Error(`Peer ${this.id} cannot reconnect because it is not disconnected from the server!`);\n    }\n  }\n\n  /**\n   * Get a list of available peer IDs. If you're running your own server, you'll\n   * want to set allow_discovery: true in the PeerServer options. If you're using\n   * the cloud server, email team@peerjs.com to get the functionality enabled for\n   * your key.\n   */\n  listAllPeers(cb = (_: any[]) => { }): void {\n    this._api.listAllPeers()\n      .then(peers => cb(peers))\n      .catch(error => this._abort(PeerErrorType.ServerError, error));\n  }\n}\n", "import { util } from \"./util\";\nimport { Peer } from \"./peer\";\n\nexport const peerjs = {\n  Peer,\n  util\n};\n\nexport default Peer;\n\n(<any>window).peerjs = peerjs;\n/** @deprecated Should use peerjs namespace */\n(<any>window).Peer = Peer;\n", "export default require(\"../../Library/PackageCache/com.needle.engine@2.7.3-pre/package~/node_modules/peerjs/dist/peerjs.min.js\");"],
  "mappings": "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",
  "names": []
}
